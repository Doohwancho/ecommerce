version: '3.7'

services:

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - bridge_network

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ecommerce-database
      # MYSQL_USER: root
      # MYSQL_PASSWORD: root
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - bridge_network

  nginx:
    restart: always
    build:
      context: ./web-server
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - bridge_network

  ecommerce-app1:
    build:
      context: ./back/ecommerce
      dockerfile: Dockerfile
    ports:
      - "8080:8080" #"HOST_PORT:CONTAINER_PORT"
    networks:
      - bridge_network
    environment:
      - SERVER_PORT=8080
    depends_on:
      - redis
      - mysql
    restart:
      on-failure

  ecommerce-app2:
    build:
      context: ./back/ecommerce
      dockerfile: Dockerfile
    ports:
      - "8081:8080" #"HOST_PORT:CONTAINER_PORT"
    networks:
      - bridge_network
    environment:
      - SERVER_PORT=8081
    depends_on:
      - redis
      - mysql
    restart:
      on-failure

networks:
  bridge_network: #얘로 frontend, backend, db 같은 네트워크로 묶는 것
    driver: bridge
