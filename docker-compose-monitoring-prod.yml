version: '3.7'

services:
  prometheus:
    image: prom/prometheus
    container_name: 'prometheus'
    hostname: prometheus
    user: root # allows prometheus to access to localhost's prometheus/prometheus_data directory
    ports:
      - '9090:9090'
    networks:
      - monitoring_network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus_data:/prometheus-data
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: on-failure

  grafana:
    image: grafana/grafana-enterprise
    container_name: 'grafana'
    hostname: grafana
    user: '0' # if you are running as root then set it to 0. else find the right id with the id -u command
    networks:
      - monitoring_network
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/conf/provisioning/dashboards/:/usr/share/grafana/conf/provisioning/dashboards/ #주의! - os마다, grafana 버전마다 docker container에서 volume mapping해줘야하는 장소가 달라질 수 있다. 현재 config는 mac m1 기준이다.
      - ./grafana/conf/provisioning/datasources/:/usr/share/grafana/conf/provisioning/datasources/
      - ./grafana/grafana_data/:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=true
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: unless-stopped # on-failure

networks:
  monitoring_network: #prometheus, grafana 같은 네트워크로 묶는 것
    driver: bridge
